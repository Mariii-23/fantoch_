name: Continuous integration

on: [push, pull_request]

jobs:
  test-and-coverage:
    name: Test and Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2020-12-10
          override: true

      - name: Test fantoch_prof, fantoch, fantoch_ps fantoch_bote
        run: cargo test --lib -p fantoch_prof -p fantoch -p fantoch_ps -p fantoch_bote
        env:
          QUICKCHECK_TESTS: '10000'
          RUSTFLAGS: '-Zinstrument-coverage'
        timeout-minutes: 60

      - name: Install grcov
        run: |
          rustup component add llvm-tools-preview
          curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -

      - name: Run grcov
        run: |
          ./grcov . --source-dir . --binary-path ./target/debug/ --output-type lcov --output-path ./lcov.info --ignore-not-existing --ignore "/* fantoch_ps/src/bin/* fantoch_bote/src/main.rs fantoch_exp/* fantoch_plot/*"

      - name: Upload to Codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -f ./lcov.info

      - name: Slack (success)
        uses: rtCamp/action-slack-notify@v2.0.2
        if: ${{ success() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: dev-ci
          SLACK_COLOR: '#5F9744'
          SLACK_ICON: https://avatars1.githubusercontent.com/u/44036562?s=48
          SLACK_TITLE: CI success
          SLACK_USERNAME: CI

      - name: Slack (failure)
        uses: rtCamp/action-slack-notify@v2.0.2
        if: ${{ failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: dev-ci
          SLACK_COLOR: '#B94947'
          SLACK_ICON: https://avatars1.githubusercontent.com/u/44036562?s=48
          SLACK_TITLE: CI failure
          SLACK_USERNAME: CI

  test-additional:
    name: Test (additional)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2020-12-10
          override: true

      - name: Test fantoch_plot
        run: |
          sudo apt-get install python3-dev python3-pip
          pip3 install matplotlib
          cd fantoch_plot/ && cargo test

      - name: Check fantoch_exp
        run: cd fantoch_exp/ && cargo check

      - name: Test feature combinations
        run: |
          cargo install cargo-hack
          cargo hack check --feature-powerset --no-dev-deps
